name: Auto-update Bootstrap Dependencies

on:
  push:
    branches:
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs on a schedule (e.g., every Monday at 08:00 UTC)
  schedule:
    - cron: '0 8 * * *'

jobs:
  update-bootstrap:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest Bootstrap version from npm
        id: bootstrap
        run: echo "latest=$(npm view bootstrap version)" >> $GITHUB_OUTPUT

      - name: Get current Bootstrap version from files
        id: current_info
        run: |
          # Get current version number from src/head.pug
          echo "version=$(grep -oP 'bootstrap@\K[0-9]+\.[0-9]+\.[0-9]+' src/head.pug | head -n 1)" >> $GITHUB_OUTPUT
          # Get current CSS integrity hash from src/head.pug (e.g., sha384-...)
          echo "css_sri=$(grep -oP 'sha384-[\w+/=]+' src/head.pug | head -n 1)" >> $GITHUB_OUTPUT
          # Get current JS integrity hash from src/footer.pug (e.g., sha384-...)
          echo "js_sri=$(grep -oP 'sha384-[\w+/=]+' src/footer.pug | head -n 1)" >> $GITHUB_OUTPUT

      - name: Stop if no new version is found
        if: steps.bootstrap.outputs.latest == steps.current_info.outputs.version
        run: echo "✅ Bootstrap is already up to date (v${{ steps.bootstrap.outputs.latest }})."

      - name: Generate new SRI hashes locally
        id: new_sri
        # Only run if there's a new version
        if: steps.bootstrap.outputs.latest != steps.current_info.outputs.version
        run: |
          BOOTSTRAP_VERSION="${{ steps.bootstrap.outputs.latest }}"
          # Construct URLs for the specific Bootstrap files
          CSS_URL="https://cdn.jsdelivr.net/npm/bootstrap@${BOOTSTRAP_VERSION}/dist/css/bootstrap.min.css"
          JS_URL="https://cdn.jsdelivr.net/npm/bootstrap@${BOOTSTRAP_VERSION}/dist/js/bootstrap.min.js"

          echo "Generating new SRI hashes locally for v${BOOTSTRAP_VERSION}..."

          # Fetch CSS content and calculate SHA384 hash
          CSS_CONTENT=$(curl -s "${CSS_URL}")
          if [ -z "$CSS_CONTENT" ]; then
              echo "Error: Could not fetch CSS content from ${CSS_URL}. Aborting."
              exit 1
          fi
          NEW_CSS_SRI="sha384-$(echo -n "${CSS_CONTENT}" | openssl dgst -sha384 -binary | openssl base64 -A)"
          echo "css_sri=$NEW_CSS_SRI" >> $GITHUB_OUTPUT
          echo "   Generated CSS SRI: ${NEW_CSS_SRI}"

          # Fetch JS content and calculate SHA384 hash
          JS_CONTENT=$(curl -s "${JS_URL}")
          if [ -z "$JS_CONTENT" ]; then
              echo "Error: Could not fetch JS content from ${JS_URL}. Aborting."
              exit 1
          fi
          NEW_JS_SRI="sha384-$(echo -n "${JS_CONTENT}" | openssl dgst -sha384 -binary | openssl base64 -A)"
          echo "js_sri=$NEW_JS_SRI" >> $GITHUB_OUTPUT
          echo "   Generated JS SRI: ${NEW_JS_SRI}"

      - name: Update files with new version and SRI hashes
        # Only run if there's a new version
        if: steps.bootstrap.outputs.latest != steps.current_info.outputs.version
        run: |
          echo "✅ New version found: ${{ steps.bootstrap.outputs.latest }}. Updating files..."
          # Use '|' as the sed delimiter to avoid conflicts with '/' in URLs
          # Update head.pug (CSS version and SRI hash)
          # The current_info.outputs.css_sri already contains "sha384-"
          sed -i 's|bootstrap@${{ steps.current_info.outputs.version }}|bootstrap@${{ steps.bootstrap.outputs.latest }}|g' src/head.pug
          sed -i 's|integrity="${{ steps.current_info.outputs.css_sri }}"|integrity="${{ steps.new_sri.outputs.css_sri }}"|g' src/head.pug

          # Update footer.pug (JS version and SRI hash)
          # The current_info.outputs.js_sri already contains "sha384-"
          sed -i 's|bootstrap@${{ steps.current_info.outputs.version }}|bootstrap@${{ steps.bootstrap.outputs.latest }}|g' src/footer.pug
          sed -i 's|integrity="${{ steps.current_info.outputs.js_sri }}"|integrity="${{ steps.new_sri.outputs.js_sri }}"|g' src/footer.pug
        
      - name: Create Pull Request
        # Only run if there's a new version
        if: steps.bootstrap.outputs.latest != steps.current_info.outputs.version
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "build(deps): Update Bootstrap to v${{ steps.bootstrap.outputs.latest }}"
          title: "Update Bootstrap to v${{ steps.bootstrap.outputs.latest }}"
          body: |
            This is an automated PR to update the Bootstrap CDN links and SRI hashes from **v${{ steps.current_info.outputs.version }}** to the latest version, **v${{ steps.bootstrap.outputs.latest }}**.

            Please review the changes and test the site preview before merging.
          branch: "bootstrap-update-${{ steps.bootstrap.outputs.latest }}"
          base: "dev"
          labels: "dependencies, automated"
